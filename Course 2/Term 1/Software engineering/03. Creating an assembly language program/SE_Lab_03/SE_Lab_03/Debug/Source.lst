Microsoft (R) Macro Assembler Version 14.33.31629.0	    09/26/22 18:38:06
Source.asm						     Page 1 - 1


				.586P													
				.MODEL FLAT, STDCALL									
				includelib kernel32.lib									

				ExitProcess PROTO :DWORD								

				.STACK 586									

 00000000			.CONST													

 00000000			.DATA
 00000000 30 33 41 73 6D		str0 DB "03Asm", 0
	   00
 00000006 10 20 30 40			myBytes BYTE 10h, 20h, 30h, 40h
 0000000A 002A 003B 0044		myWords WORD 2Ah, 3Bh, 44h, 5Fh, 99h
	   005F 0099
 00000014 00000001			myDoubles DWORD 1, 2, 3, 4, 5, 6
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
 0000002C 00000014 R			myPointer DWORD myDoubles

 00000030 00000001			arr DWORD 1, 0, 2, 3, 4, 5, 6
	   00000000
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
 0000004C 00000000			sum DWORD 0	
 00000000			.CODE													

 00000000			main PROC												
 00000000			START :													
 00000000  BE 0000000A R		mov ESI, OFFSET myWords
 00000005  66| 8B 06			mov AX, [ESI + 0]
 00000008  66| 8B 5E 02			mov BX, [ESI + 2] 
					
 0000000C  BE 00000014 R		mov ESI, OFFSET myDoubles
 00000011  66| 8B 06			mov AX, [ESI + 0]
 00000014  66| 8B 46 08			mov AX, [ESI + 8]
					
 00000018  B9 00000007			mov ECX, lengthof arr

 0000001D  BE 00000030 R		mov ESI, OFFSET arr


 00000022  BB 00000001			mov EBX, 1
 00000027				CYCLE:
 00000027  8B 06				mov EAX, [ESI]

 00000029  01 05 0000004C R			add sum, EAX 
 0000002F  83 C6 04				add ESI, type arr

 00000032  83 F8 00				cmp EAX, 0
 00000035  74 09				jz ifZero
 00000037					BACK:
 00000037  E2 EE					loop CYCLE
					
					invoke ExitProcess, 0

 00000040				ifZero:
 00000040  BB 00000000				mov EBX, 0
 00000045  EB F0				jmp BACK

 00000047			main ENDP

				end main
Microsoft (R) Macro Assembler Version 14.33.31629.0	    09/26/22 18:38:06
Source.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 0000024A Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000050 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000047 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000047 Public STDCALL
  START  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  CYCLE  . . . . . . . . . . . .	L Near	 00000027 _TEXT	
  BACK . . . . . . . . . . . . .	L Near	 00000037 _TEXT	
  ifZero . . . . . . . . . . . .	L Near	 00000040 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
arr  . . . . . . . . . . . . . .	DWord	 00000030 _DATA	
myBytes  . . . . . . . . . . . .	Byte	 00000006 _DATA	
myDoubles  . . . . . . . . . . .	DWord	 00000014 _DATA	
myPointer  . . . . . . . . . . .	DWord	 0000002C _DATA	
myWords  . . . . . . . . . . . .	Word	 0000000A _DATA	
str0 . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
sum  . . . . . . . . . . . . . .	DWord	 0000004C _DATA	

	   0 Warnings
	   0 Errors
