@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<div class="flex_nav_menu">
    @if (SignInManager.IsSignedIn(User))
    {
        <div>
            <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="ChangePassword">Change Password</a>
        </div>
        <div>
            @* <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form> *@
            <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="SignOut">Logout</a>
        </div>
    }
    else
    {
        @* <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">DefRegister</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">DefLogin</a>
        </li> *@
        <div>
            <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="Register">Register</a>
        </div>
        <div>
            <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="SignIn">Login</a>
        </div>
    }
</div>